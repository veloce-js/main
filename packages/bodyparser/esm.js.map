{
  "version": 3,
  "sources": ["node_modules/.pnpm/url-pattern@1.0.3/node_modules/url-pattern/lib/url-pattern.js", "node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js", "node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/common.js", "node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/browser.js", "node_modules/.pnpm/has-flag@4.0.0/node_modules/has-flag/index.js", "node_modules/.pnpm/supports-color@7.2.0/node_modules/supports-color/index.js", "node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/node.js", "node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/index.js", "src/constants.ts", "src/utils.ts", "src/url-pattern.ts", "src/parse-query.ts", "src/handle-upload.ts", "src/parse-multipart.ts", "src/body-parser.ts", "src/index.ts"],
  "sourcesContent": ["// Generated by CoffeeScript 1.10.0\nvar slice = [].slice;\n\n(function(root, factory) {\n  if (('function' === typeof define) && (define.amd != null)) {\n    return define([], factory);\n  } else if (typeof exports !== \"undefined\" && exports !== null) {\n    return module.exports = factory();\n  } else {\n    return root.UrlPattern = factory();\n  }\n})(this, function() {\n  var P, UrlPattern, astNodeContainsSegmentsForProvidedParams, astNodeToNames, astNodeToRegexString, baseAstNodeToRegexString, concatMap, defaultOptions, escapeForRegex, getParam, keysAndValuesToObject, newParser, regexGroupCount, stringConcatMap, stringify;\n  escapeForRegex = function(string) {\n    return string.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  };\n  concatMap = function(array, f) {\n    var i, length, results;\n    results = [];\n    i = -1;\n    length = array.length;\n    while (++i < length) {\n      results = results.concat(f(array[i]));\n    }\n    return results;\n  };\n  stringConcatMap = function(array, f) {\n    var i, length, result;\n    result = '';\n    i = -1;\n    length = array.length;\n    while (++i < length) {\n      result += f(array[i]);\n    }\n    return result;\n  };\n  regexGroupCount = function(regex) {\n    return (new RegExp(regex.toString() + '|')).exec('').length - 1;\n  };\n  keysAndValuesToObject = function(keys, values) {\n    var i, key, length, object, value;\n    object = {};\n    i = -1;\n    length = keys.length;\n    while (++i < length) {\n      key = keys[i];\n      value = values[i];\n      if (value == null) {\n        continue;\n      }\n      if (object[key] != null) {\n        if (!Array.isArray(object[key])) {\n          object[key] = [object[key]];\n        }\n        object[key].push(value);\n      } else {\n        object[key] = value;\n      }\n    }\n    return object;\n  };\n  P = {};\n  P.Result = function(value, rest) {\n    this.value = value;\n    this.rest = rest;\n  };\n  P.Tagged = function(tag, value) {\n    this.tag = tag;\n    this.value = value;\n  };\n  P.tag = function(tag, parser) {\n    return function(input) {\n      var result, tagged;\n      result = parser(input);\n      if (result == null) {\n        return;\n      }\n      tagged = new P.Tagged(tag, result.value);\n      return new P.Result(tagged, result.rest);\n    };\n  };\n  P.regex = function(regex) {\n    return function(input) {\n      var matches, result;\n      matches = regex.exec(input);\n      if (matches == null) {\n        return;\n      }\n      result = matches[0];\n      return new P.Result(result, input.slice(result.length));\n    };\n  };\n  P.sequence = function() {\n    var parsers;\n    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return function(input) {\n      var i, length, parser, rest, result, values;\n      i = -1;\n      length = parsers.length;\n      values = [];\n      rest = input;\n      while (++i < length) {\n        parser = parsers[i];\n        result = parser(rest);\n        if (result == null) {\n          return;\n        }\n        values.push(result.value);\n        rest = result.rest;\n      }\n      return new P.Result(values, rest);\n    };\n  };\n  P.pick = function() {\n    var indexes, parsers;\n    indexes = arguments[0], parsers = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return function(input) {\n      var array, result;\n      result = P.sequence.apply(P, parsers)(input);\n      if (result == null) {\n        return;\n      }\n      array = result.value;\n      result.value = array[indexes];\n      return result;\n    };\n  };\n  P.string = function(string) {\n    var length;\n    length = string.length;\n    return function(input) {\n      if (input.slice(0, length) === string) {\n        return new P.Result(string, input.slice(length));\n      }\n    };\n  };\n  P.lazy = function(fn) {\n    var cached;\n    cached = null;\n    return function(input) {\n      if (cached == null) {\n        cached = fn();\n      }\n      return cached(input);\n    };\n  };\n  P.baseMany = function(parser, end, stringResult, atLeastOneResultRequired, input) {\n    var endResult, parserResult, rest, results;\n    rest = input;\n    results = stringResult ? '' : [];\n    while (true) {\n      if (end != null) {\n        endResult = end(rest);\n        if (endResult != null) {\n          break;\n        }\n      }\n      parserResult = parser(rest);\n      if (parserResult == null) {\n        break;\n      }\n      if (stringResult) {\n        results += parserResult.value;\n      } else {\n        results.push(parserResult.value);\n      }\n      rest = parserResult.rest;\n    }\n    if (atLeastOneResultRequired && results.length === 0) {\n      return;\n    }\n    return new P.Result(results, rest);\n  };\n  P.many1 = function(parser) {\n    return function(input) {\n      return P.baseMany(parser, null, false, true, input);\n    };\n  };\n  P.concatMany1Till = function(parser, end) {\n    return function(input) {\n      return P.baseMany(parser, end, true, true, input);\n    };\n  };\n  P.firstChoice = function() {\n    var parsers;\n    parsers = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return function(input) {\n      var i, length, parser, result;\n      i = -1;\n      length = parsers.length;\n      while (++i < length) {\n        parser = parsers[i];\n        result = parser(input);\n        if (result != null) {\n          return result;\n        }\n      }\n    };\n  };\n  newParser = function(options) {\n    var U;\n    U = {};\n    U.wildcard = P.tag('wildcard', P.string(options.wildcardChar));\n    U.optional = P.tag('optional', P.pick(1, P.string(options.optionalSegmentStartChar), P.lazy(function() {\n      return U.pattern;\n    }), P.string(options.optionalSegmentEndChar)));\n    U.name = P.regex(new RegExp(\"^[\" + options.segmentNameCharset + \"]+\"));\n    U.named = P.tag('named', P.pick(1, P.string(options.segmentNameStartChar), P.lazy(function() {\n      return U.name;\n    })));\n    U.escapedChar = P.pick(1, P.string(options.escapeChar), P.regex(/^./));\n    U[\"static\"] = P.tag('static', P.concatMany1Till(P.firstChoice(P.lazy(function() {\n      return U.escapedChar;\n    }), P.regex(/^./)), P.firstChoice(P.string(options.segmentNameStartChar), P.string(options.optionalSegmentStartChar), P.string(options.optionalSegmentEndChar), U.wildcard)));\n    U.token = P.lazy(function() {\n      return P.firstChoice(U.wildcard, U.optional, U.named, U[\"static\"]);\n    });\n    U.pattern = P.many1(P.lazy(function() {\n      return U.token;\n    }));\n    return U;\n  };\n  defaultOptions = {\n    escapeChar: '\\\\',\n    segmentNameStartChar: ':',\n    segmentValueCharset: 'a-zA-Z0-9-_~ %',\n    segmentNameCharset: 'a-zA-Z0-9',\n    optionalSegmentStartChar: '(',\n    optionalSegmentEndChar: ')',\n    wildcardChar: '*'\n  };\n  baseAstNodeToRegexString = function(astNode, segmentValueCharset) {\n    if (Array.isArray(astNode)) {\n      return stringConcatMap(astNode, function(node) {\n        return baseAstNodeToRegexString(node, segmentValueCharset);\n      });\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return '(.*?)';\n      case 'named':\n        return \"([\" + segmentValueCharset + \"]+)\";\n      case 'static':\n        return escapeForRegex(astNode.value);\n      case 'optional':\n        return '(?:' + baseAstNodeToRegexString(astNode.value, segmentValueCharset) + ')?';\n    }\n  };\n  astNodeToRegexString = function(astNode, segmentValueCharset) {\n    if (segmentValueCharset == null) {\n      segmentValueCharset = defaultOptions.segmentValueCharset;\n    }\n    return '^' + baseAstNodeToRegexString(astNode, segmentValueCharset) + '$';\n  };\n  astNodeToNames = function(astNode) {\n    if (Array.isArray(astNode)) {\n      return concatMap(astNode, astNodeToNames);\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return ['_'];\n      case 'named':\n        return [astNode.value];\n      case 'static':\n        return [];\n      case 'optional':\n        return astNodeToNames(astNode.value);\n    }\n  };\n  getParam = function(params, key, nextIndexes, sideEffects) {\n    var index, maxIndex, result, value;\n    if (sideEffects == null) {\n      sideEffects = false;\n    }\n    value = params[key];\n    if (value == null) {\n      if (sideEffects) {\n        throw new Error(\"no values provided for key `\" + key + \"`\");\n      } else {\n        return;\n      }\n    }\n    index = nextIndexes[key] || 0;\n    maxIndex = Array.isArray(value) ? value.length - 1 : 0;\n    if (index > maxIndex) {\n      if (sideEffects) {\n        throw new Error(\"too few values provided for key `\" + key + \"`\");\n      } else {\n        return;\n      }\n    }\n    result = Array.isArray(value) ? value[index] : value;\n    if (sideEffects) {\n      nextIndexes[key] = index + 1;\n    }\n    return result;\n  };\n  astNodeContainsSegmentsForProvidedParams = function(astNode, params, nextIndexes) {\n    var i, length;\n    if (Array.isArray(astNode)) {\n      i = -1;\n      length = astNode.length;\n      while (++i < length) {\n        if (astNodeContainsSegmentsForProvidedParams(astNode[i], params, nextIndexes)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return getParam(params, '_', nextIndexes, false) != null;\n      case 'named':\n        return getParam(params, astNode.value, nextIndexes, false) != null;\n      case 'static':\n        return false;\n      case 'optional':\n        return astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes);\n    }\n  };\n  stringify = function(astNode, params, nextIndexes) {\n    if (Array.isArray(astNode)) {\n      return stringConcatMap(astNode, function(node) {\n        return stringify(node, params, nextIndexes);\n      });\n    }\n    switch (astNode.tag) {\n      case 'wildcard':\n        return getParam(params, '_', nextIndexes, true);\n      case 'named':\n        return getParam(params, astNode.value, nextIndexes, true);\n      case 'static':\n        return astNode.value;\n      case 'optional':\n        if (astNodeContainsSegmentsForProvidedParams(astNode.value, params, nextIndexes)) {\n          return stringify(astNode.value, params, nextIndexes);\n        } else {\n          return '';\n        }\n    }\n  };\n  UrlPattern = function(arg1, arg2) {\n    var groupCount, options, parsed, parser, withoutWhitespace;\n    if (arg1 instanceof UrlPattern) {\n      this.isRegex = arg1.isRegex;\n      this.regex = arg1.regex;\n      this.ast = arg1.ast;\n      this.names = arg1.names;\n      return;\n    }\n    this.isRegex = arg1 instanceof RegExp;\n    if (!(('string' === typeof arg1) || this.isRegex)) {\n      throw new TypeError('argument must be a regex or a string');\n    }\n    if (this.isRegex) {\n      this.regex = arg1;\n      if (arg2 != null) {\n        if (!Array.isArray(arg2)) {\n          throw new Error('if first argument is a regex the second argument may be an array of group names but you provided something else');\n        }\n        groupCount = regexGroupCount(this.regex);\n        if (arg2.length !== groupCount) {\n          throw new Error(\"regex contains \" + groupCount + \" groups but array of group names contains \" + arg2.length);\n        }\n        this.names = arg2;\n      }\n      return;\n    }\n    if (arg1 === '') {\n      throw new Error('argument must not be the empty string');\n    }\n    withoutWhitespace = arg1.replace(/\\s+/g, '');\n    if (withoutWhitespace !== arg1) {\n      throw new Error('argument must not contain whitespace');\n    }\n    options = {\n      escapeChar: (arg2 != null ? arg2.escapeChar : void 0) || defaultOptions.escapeChar,\n      segmentNameStartChar: (arg2 != null ? arg2.segmentNameStartChar : void 0) || defaultOptions.segmentNameStartChar,\n      segmentNameCharset: (arg2 != null ? arg2.segmentNameCharset : void 0) || defaultOptions.segmentNameCharset,\n      segmentValueCharset: (arg2 != null ? arg2.segmentValueCharset : void 0) || defaultOptions.segmentValueCharset,\n      optionalSegmentStartChar: (arg2 != null ? arg2.optionalSegmentStartChar : void 0) || defaultOptions.optionalSegmentStartChar,\n      optionalSegmentEndChar: (arg2 != null ? arg2.optionalSegmentEndChar : void 0) || defaultOptions.optionalSegmentEndChar,\n      wildcardChar: (arg2 != null ? arg2.wildcardChar : void 0) || defaultOptions.wildcardChar\n    };\n    parser = newParser(options);\n    parsed = parser.pattern(arg1);\n    if (parsed == null) {\n      throw new Error(\"couldn't parse pattern\");\n    }\n    if (parsed.rest !== '') {\n      throw new Error(\"could only partially parse pattern\");\n    }\n    this.ast = parsed.value;\n    this.regex = new RegExp(astNodeToRegexString(this.ast, options.segmentValueCharset));\n    this.names = astNodeToNames(this.ast);\n  };\n  UrlPattern.prototype.match = function(url) {\n    var groups, match;\n    match = this.regex.exec(url);\n    if (match == null) {\n      return null;\n    }\n    groups = match.slice(1);\n    if (this.names) {\n      return keysAndValuesToObject(this.names, groups);\n    } else {\n      return groups;\n    }\n  };\n  UrlPattern.prototype.stringify = function(params) {\n    if (params == null) {\n      params = {};\n    }\n    if (this.isRegex) {\n      throw new Error(\"can't stringify patterns generated from a regex\");\n    }\n    if (params !== Object(params)) {\n      throw new Error(\"argument must be an object or undefined\");\n    }\n    return stringify(this.ast, params, {});\n  };\n  UrlPattern.escapeForRegex = escapeForRegex;\n  UrlPattern.concatMap = concatMap;\n  UrlPattern.stringConcatMap = stringConcatMap;\n  UrlPattern.regexGroupCount = regexGroupCount;\n  UrlPattern.keysAndValuesToObject = keysAndValuesToObject;\n  UrlPattern.P = P;\n  UrlPattern.newParser = newParser;\n  UrlPattern.defaultOptions = defaultOptions;\n  UrlPattern.astNodeToRegexString = astNodeToRegexString;\n  UrlPattern.astNodeToNames = astNodeToNames;\n  UrlPattern.getParam = getParam;\n  UrlPattern.astNodeContainsSegmentsForProvidedParams = astNodeContainsSegmentsForProvidedParams;\n  UrlPattern.stringify = stringify;\n  return UrlPattern;\n});\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n", "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", "export const BOUNDARY = 'boundary'\nexport const CONTENT_TYPE = 'content-type'\n// simple input type to determine what is the response should be\nexport const IS_OTHER = 'other' // basically means we don't know what this is\nexport const IS_FORM = 'form'\nexport const IS_MULTI = 'multipart' // file mixed with form data\nexport const IS_JSON = 'json' // jsonql also fall under this\nexport const IS_DYNAMIC = 'dynamic'\nexport const IS_FILE = 'binary' // @TODO when headers is one of the binary format\n\nexport const GET_NAME = 'get'\n\nexport const DEFAULT_FORM_HEADER = 'application/x-www-form-urlencoded'\nexport const FILE_POST_HEADER = 'multipart/form-data'\n\nexport const DYNAMIC_ROUTE_PATTERN = '/:'\n// default options for body parser\nexport const DEFAULT_CONFIG = {\n  stripUnderscoreParam: true, // so those _cb will get strip out\n  originalRouteDef: '' // use this understand better what to expect\n}\n// We need to namespace all the different params\n// then we could support more variety of query schema\nexport const QUERY_PARAM = 'queryParams'\nexport const DYNAMIC_PARAM = 'dynamicParams'\nexport const DYNAMIC_NAMES = 'names'\n// keys for config\nexport const STRIP_UNDERSCORE = 'stripUnderscoreParam'\nexport const ORG_ROUTE_REF = '_originalRouteDef'\nexport const URL_PATTERN_OBJ = '_urlPatternObj'\n// copy from velocejs/client\nexport const JSONQL_CONTENT_TYPE = 'application/vnd.api+json'\nexport const CHARSET = 'charset=utf-8'\nexport const CLIENT_KEY = 'x-client'\nexport const CLIENT_NAME = 'velocejs'\n// combine default jsonql headers\nexport const DEFAULT_HEADERS = {\n  'Accept': JSONQL_CONTENT_TYPE,\n  'Content-Type': [ JSONQL_CONTENT_TYPE, CHARSET ].join('; '),\n  [CLIENT_KEY]: CLIENT_NAME\n}\n", "import {\n  HttpRequest,\n  UwsStringPairObj,\n  UwsBodyParserOptions,\n} from './types'\nimport {\n  CONTENT_TYPE,\n  DEFAULT_FORM_HEADER,\n  FILE_POST_HEADER,\n  DYNAMIC_ROUTE_PATTERN,\n  DEFAULT_CONFIG,\n  IS_JSON,\n} from './constants'\n\n/** provide default to options */\nexport function applyConfig(config?: UwsBodyParserOptions) {\n  return Object.assign(DEFAULT_CONFIG, config || {})\n}\n\n/** return all the headers with lowercase key */\nexport function getHeaders(req: HttpRequest) {\n  const headers = {}\n  req.forEach((key: string, value: string) => {\n    headers[key.toLowerCase()] = value\n  })\n  return headers\n}\n\n// wrapper method\nexport function toArr(value: unknown): Array<unknown> {\n  return Array.isArray(value) ? value : [value]\n}\n\n/** unknown to buffer */\nexport function toBuffer(data: unknown): Buffer {\n  return Buffer.isBuffer(data) ? data : Buffer.from(data as string)\n}\n\n/* see if its array like name such as data[]\n  we just discard whatever is inside, because its pointless to have this stupid name */\nexport function takeApartName(name: string): Array<string | boolean> {\n  return (name.indexOf('[') > -1) ? [ name.split('[')[0], true ]\n                                  : [ name, false ] // return a tuple\n}\n\n/* check if the object is empty for the init run */\nexport const isEmptyObj = (obj: object): boolean => (\n  obj && Object.keys(obj).length === 0 && obj.constructor === Object\n)\n\n/** check if the header 'Content-Type' is a json like */\nexport const isJson = (headers: UwsStringPairObj): boolean => (\n  headers[CONTENT_TYPE] !== undefined && headers[CONTENT_TYPE].indexOf(IS_JSON) > -1\n)\n\n// check if it's regular post form\nexport const isForm = (headers: UwsStringPairObj): boolean => (\n  headers[CONTENT_TYPE] !== undefined && headers[CONTENT_TYPE].indexOf(DEFAULT_FORM_HEADER) > -1\n)\n\n// change from isFile to isMultipart - isFile expect pure binary format\nexport const isMultipart = (headers: UwsStringPairObj): boolean => (\n  headers[CONTENT_TYPE] !== undefined &&\n  headers[CONTENT_TYPE].indexOf(FILE_POST_HEADER) > -1\n  // headers[CONTENT_TYPE].indexOf(BOUNDARY) > -1\n)\n\n/** check for one the binary format header */\nexport const isFile = (headers: UwsStringPairObj): boolean => {\n  throw new Error(`Not implment yet`, headers)\n}\n\n/** just check if the url looks like a dynamic route */\nexport const isDynamicRoute = (route: string) => route.indexOf(DYNAMIC_ROUTE_PATTERN) > -1\n", "// using the url-pattern lib to match against the dynamic url\nimport type { UwsStringPairObj } from '../index'\nimport UrlPatternLib from 'url-pattern'\nimport { isDynamicRoute } from './utils'\nimport { DYNAMIC_ROUTE_PATTERN } from './constants'\n\nexport class UrlPattern {\n  private _libObj: UrlPatternLib\n  private _originalUrl!: string\n  private _transformUrl!: string\n  // we need this when we encounter spread argument method handler\n  public names: string[] = []\n\n  constructor(basePatternUrl: string) {\n    this._libObj = new UrlPatternLib(\n      this._validate(basePatternUrl)\n    )\n    // also we need to use this to create a base url\n    // for example the url is like /posts/:day/:month/:year/:slug\n    // then we have to create a url like /post/* for uws then parse it\n  }\n\n  get route() {\n    return this._transformUrl\n  }\n\n  get orginal() {\n    return this._originalUrl\n  }\n\n  private _validate(url: string) {\n    url = url.substring(0,1) === '/' ? url.substring(1) : url\n    // console.log(url)\n    const parts = url.split('/')\n    if (parts[0].indexOf(':') > -1) {\n      throw new Error(`The first part of the dynamic url must be a full string!`)\n    }\n    this._originalUrl = '/' + url\n    this._transformUrl = '/' + parts[0] + '/*'\n    this._getNames(url)\n\n    return this._originalUrl\n  }\n\n  /** super simple check */\n  static check(url: string): boolean {\n    // now just a wrapper\n    return isDynamicRoute(url)\n  }\n\n  /** parse the var from url */\n  parse(url: string) {\n    return this._libObj.match(url)\n  }\n\n  /** construct a url */\n  create(params: UwsStringPairObj): string {\n    return this._libObj.stringify(params)\n  }\n\n  /** this is not great solution but ... */\n  private _getNames(url: string): void {\n    const parts = url.split(DYNAMIC_ROUTE_PATTERN)\n    parts.shift()\n    this.names = parts.map((part: string) =>\n      part.replace('(','').replace(')','')\n    )\n  }\n}\n", "// this is taken out from util and expand it's capability\nimport type {\n  UwsBodyParserOptions\n} from './types'\nimport {\n  QUERY_PARAM,\n  DYNAMIC_NAMES,\n  DYNAMIC_PARAM,\n  STRIP_UNDERSCORE,\n  ORG_ROUTE_REF,\n  URL_PATTERN_OBJ,\n} from './constants'\nimport {\n  UrlPattern\n} from './url-pattern'\nimport debugFn from 'debug'\nconst debug = debugFn('velocejs:bodypaser:parse-query')\n// the actual function to take the query apart\nexport function parseQuery(\n  url: string,\n  query: string,\n  config?: UwsBodyParserOptions\n) {\n  const c = config as UwsBodyParserOptions\n  let params = {\n    [QUERY_PARAM]: processQueryParameters(query, c[STRIP_UNDERSCORE])\n  }\n  // process the query parameter first if any\n  // next if we provide the url for analysis and if it's a dynamic route\n  if (c[URL_PATTERN_OBJ] || c[ORG_ROUTE_REF]) {\n    params = Object.assign(\n      params,\n      processDynamicRoute(url, c)\n    )\n  }\n  // only one way or the other, not allow to mix and match\n  return params\n}\n\n/** break up the process to make the main interface cleaner */\nexport function processQueryParameters(\n  query: string,\n  stripUnderscoreParam?: boolean\n) {\n  const params = new URLSearchParams(query)\n  const result = {}\n  for (const pair of params.entries()) {\n    const key = pair[0]\n    if (stripUnderscoreParam) {\n      if (key.substring(0,1) === '_') {\n        continue\n      }\n    }\n    result[ key ] = pair[1]\n  }\n  return result\n}\n\n/** wrap this together and divide the task here */\nfunction processDynamicRoute(\n  url: string,\n  config: UwsBodyParserOptions\n) {\n  if (config[URL_PATTERN_OBJ]) {\n    debug('parse url using UrlPattern')\n    return processDynamicRouteByUrlPattern(url, config[URL_PATTERN_OBJ])\n  }\n  debug('parse url with pattern url')\n  return processDynamicRouteWithOrgRef(url, config[ORG_ROUTE_REF])\n}\n\n\n/** process dynamic route */\nfunction processDynamicRouteWithOrgRef(\n  url: string,\n  originalRouteDef?: string\n) {\n  const orgUrl = originalRouteDef as string\n  if (UrlPattern.check(orgUrl)) {\n    const obj = new UrlPattern(orgUrl)\n    return processDynamicRouteByUrlPattern(url, obj)\n  }\n  return {}\n}\n\n/** if we pass this instance straight means we already did all the work before we call here*/\nfunction processDynamicRouteByUrlPattern(\n  url: string,\n  urlPatternObj: UrlPattern\n) {\n  return {\n    [DYNAMIC_PARAM]: urlPatternObj.parse(url),\n    [DYNAMIC_NAMES]: urlPatternObj.names\n  }\n}\n", "// return the upload Data\nimport { HttpResponse } from './types'\nimport debug from 'debug'\nconst debugFn = debug('velocejs:server:body-parser:handle-upload')\n\n// get the upload buffer from response\n// WE CAN NOT do this with async because all the handler must get call\n// when isLast is true\nexport function uploadHandler(\n  res: HttpResponse,\n  bufferHandler: (b: Buffer) => void,\n  onAbortedHandler?: () => void\n): void {\n  onDataHandler(res, bufferHandler)\n  // if we don't attach an onAborted handler then we get complain\n  res.onAborted(() => {\n    onAbortedHandler ? onAbortedHandler() : debugFn('uploadHandler onAborted')\n  })\n}\n// we take the onData callback further for re-use in the body parser method\nexport function onDataHandler(\n  res: HttpResponse,\n  bufferHandler: (b: Buffer | any) => void\n) {\n  let data: Buffer\n  res.onData((chunk: ArrayBuffer, isLast: boolean) => {\n    const _chunk = Buffer.from(chunk)\n    data = data ? Buffer.concat([data, _chunk]) : Buffer.concat([_chunk])\n    if (isLast) {\n      bufferHandler(data)\n    }\n  })\n}\n", "/**\n * Multipart Parser (Finite State Machine)\n * usage:\n * const multipart = require('./multipart.js');\n * const body = multipart.DemoData(); \t\t\t\t\t\t\t   // raw body\n * const body = Buffer.from(event['body-json'].toString(),'base64'); // AWS case\n * const boundary = multipart.getBoundary(event.params.header['content-type']);\n * const parts = multipart.Parse(body,boundary);\n * each part is:\n * { filename: 'A.txt', type: 'text/plain', data: <Buffer 41 41 41 41 42 42 42 42> }\n *  or { name: 'key', data: <Buffer 41 41 41 41 42 42 42 42> }\n */\n\nimport { Part, Input } from './types'\n\nexport function parse(multipartBodyBuffer: Buffer, boundary: string): Input[] {\n  let lastline = ''\n  let header = ''\n  let info = ''\n  let state = 0\n  let buffer: number[] = []\n  const allParts: Input[] = []\n\n  for (let i = 0; i < multipartBodyBuffer.length; i++) {\n    const oneByte: number = multipartBodyBuffer[i]\n    const prevByte: number | null = i > 0 ? multipartBodyBuffer[i - 1] : null\n    const newLineDetected: boolean =\n      oneByte === 0x0a && prevByte === 0x0d ? true : false\n    const newLineChar: boolean =\n      oneByte === 0x0a || oneByte === 0x0d ? true : false\n\n    if (!newLineChar) lastline += String.fromCharCode(oneByte)\n\n    if (0 === state && newLineDetected) {\n      if ('--' + boundary === lastline) {\n        state = 1\n      }\n      lastline = ''\n    } else if (1 === state && newLineDetected) {\n      header = lastline\n      state = 2\n      if (header.indexOf('filename') === -1) {\n        state = 3\n      }\n      lastline = ''\n    } else if (2 === state && newLineDetected) {\n      info = lastline\n      state = 3\n      lastline = ''\n    } else if (3 === state && newLineDetected) {\n      state = 4\n      buffer = []\n      lastline = ''\n    } else if (4 === state) {\n      if (lastline.length > boundary.length + 4) lastline = '' // mem save\n      if ('--' + boundary === lastline) {\n        const j = buffer.length - lastline.length\n        const part = buffer.slice(0, j - 1)\n        const p: Part = { header: header, info: info, part: part }\n\n        allParts.push(process(p))\n        buffer = []\n        lastline = ''\n        state = 5\n        header = ''\n        info = ''\n      } else {\n        buffer.push(oneByte)\n      }\n      if (newLineDetected) lastline = ''\n    } else if (5 === state) {\n      if (newLineDetected) state = 1\n    }\n  }\n  return allParts\n}\n\n//  read the boundary from the content-type header sent by the http client\n//  this value may be similar to:\n//  'multipart/form-data; boundary=----WebKitFormBoundaryvm5A9tzU1ONaGP5B',\nexport function getBoundary(header: string): string {\n  const items = header.split(';')\n  if (items) {\n    for (let i = 0; i < items.length; i++) {\n      const item = new String(items[i]).trim()\n      if (item.indexOf('boundary') >= 0) {\n        const k = item.split('=')\n        return new String(k[1]).trim().replace(/^[\"']|[\"']$/g, \"\")\n      }\n    }\n  }\n  return ''\n}\n\nfunction process(part: Part): Input {\n\n  // console.log('part', part)\n\n  // will transform this object:\n  // { header: 'Content-Disposition: form-data; name=\"uploads[]\"; filename=\"A.txt\"',\n  // info: 'Content-Type: text/plain',\n  // part: 'AAAABBBB' }\n  // into this one:\n  // { filename: 'A.txt', type: 'text/plain', data: <Buffer 41 41 41 41 42 42 42 42> }\n  const obj = function(str: string) {\n    const k = str.split('=')\n    const a = k[0].trim()\n\n    const b = JSON.parse(k[1].trim())\n    const o = {}\n    Object.defineProperty(o, a, {\n      value: b,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    })\n    return o\n  }\n  const header = part.header.split(';')\n  const filenameData = header[2]\n  let input = {}\n  if (filenameData) {\n    input = obj(filenameData)\n    const contentType = part.info.split(':')[1].trim()\n\n    Object.defineProperty(input, 'type', {\n      value: contentType,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    })\n  }\n  // should always process the name\n  Object.defineProperty(input, 'name', {\n    value: header[1].split('=')[1].replace(/\"/g, ''),\n    writable: true,\n    enumerable: true,\n    configurable: true\n  })\n\n\n  Object.defineProperty(input, 'data', {\n    value: Buffer.from(part.part),\n    writable: true,\n    enumerable: true,\n    configurable: true\n  })\n  return input as Input\n}\n", "// bodyparser main\nimport type {\n  HttpResponse,\n  HttpRequest,\n  UwsRespondBody,\n  UwsStringPairObj,\n  UwsBodyParserMixEntry,\n  UwsBodyParserOptions,\n  UwsStringAnyObj,\n} from './types'\nimport {\n  CONTENT_TYPE,\n  IS_FORM,\n  IS_JSON,\n  IS_MULTI,\n  IS_OTHER,\n  IS_DYNAMIC,\n  GET_NAME,\n  DYNAMIC_PARAM,\n  DYNAMIC_NAMES,\n  QUERY_PARAM,\n} from './constants'\nimport {\n  getHeaders,\n  toArr,\n  toBuffer,\n  takeApartName,\n  isEmptyObj,\n  isJson,\n  isForm,\n  isMultipart,\n  applyConfig,\n} from './utils'\nimport {\n  parseQuery,\n  processQueryParameters,\n} from './parse-query'\nimport { onDataHandler } from './handle-upload'\n// @NOTE 2022-05-02 although the module has updated but it still not working correctly!\nimport {\n  parse,\n  getBoundary\n} from './parse-multipart'\n// debug\nimport debug from 'debug'\nconst debugFn = debug('velocejs:body-parser:main')\n// processing\n\n// main\nexport async function bodyParser(\n  res: HttpResponse,\n  req: HttpRequest,\n  options?: { config: UwsBodyParserOptions }\n): Promise<UwsRespondBody> {\n  debugFn('bodyparser options', options)\n  // @NOTE the onAborted handler never works here, its been moved back to fastapi internal\n  const url = req.getUrl()\n  const query = req.getQuery()\n  const method = req.getMethod()\n  const headers = getHeaders(req)\n  const queryParams = parseQuery(url, query, applyConfig(options?.config))\n  const params = {}\n  // we now always parse the URL because the url could be soemthing like /something/*/_id whatever\n  // and we need to extract the params from the url and pass back as the ctx object\n  const body: UwsRespondBody = { url, method, query, headers, params, queryParams }\n  body[QUERY_PARAM] = queryParams[QUERY_PARAM]\n  // check if it has dynamic route\n  if (queryParams[DYNAMIC_PARAM]) {\n    body[DYNAMIC_NAMES] = queryParams[DYNAMIC_NAMES]\n    body.params = queryParams[DYNAMIC_PARAM]\n    body.type = IS_DYNAMIC\n  }\n  if (method === GET_NAME) {\n    if (!body.type) { // not set in the last process\n      // even without a payload it could have a json header\n      body.type = isJson(headers) ? IS_JSON : IS_OTHER\n    }\n    return Promise.resolve(body)\n  }\n  // we should only call this when the header is not GET - there is nobody to process\n  return new Promise(resolver => {\n    onDataHandler(res, buffer => {\n      body.payload = buffer\n      switch (true) {\n        case isJson(headers):\n          body.type = IS_JSON\n          body.params = handleJsonRequestParams(buffer, params)\n          break\n        case isForm(headers):\n          body.type = IS_FORM\n          body.params = processQueryParameters(buffer.toString())\n          break\n        case isMultipart(headers):\n          body.type = IS_MULTI\n          body.params = parseMultipart(headers, buffer)\n          break\n        default:\n          // @TODO need to test more edge case to find out how we can get here\n          body.type = IS_OTHER\n      }\n      resolver(body)\n    })\n  })\n}\n\n/**\n we could get some strange result here\n when we set a json header with a GET\n */\nfunction handleJsonRequestParams(\n  buffer: Buffer,\n  params: UwsStringAnyObj\n) {\n  const payload = buffer.toString()\n  // @TODO this could still be problematic in some edge case, waiting for that to happen\n  return payload ? JSON.parse(payload) : (isEmptyObj(params) ? {} : params)\n}\n\n/** all-in-one to parse and post-process the multipart-formdata input */\nexport function parseMultipart(\n  headers: UwsStringPairObj,\n  body: Buffer\n): object {\n  const boundary = getBoundary(headers[CONTENT_TYPE] as string)\n  if (boundary) {\n    const params = parse(body, boundary as string)\n    if (Array.isArray(params) && params.length) {\n      return processParams(params as unknown as Array<Record<string, UwsBodyParserMixEntry>>)\n    }\n  }\n  return {}\n}\n\n/** process the file upload array */\nfunction processFileArray(\n  params: Array<Record<string, UwsBodyParserMixEntry>>\n) {\n  return params\n     .filter(param => param.filename && param.type)\n     .map(param => {\n       const { name, type, filename, data } = param\n       const [ strName, arr ] = takeApartName(name as unknown as string)\n       const content = { type, filename, data }\n       const value = arr ? [ content ] : content\n\n       return { name: strName as string, value }\n     })\n     // from https://stackoverflow.com/questions/57379778/typescript-type-for-reduce\n     // @TODO the output type still problematic\n     .reduce<Record<string, UwsBodyParserMixEntry>>((a , b): any => {\n       switch (true) {\n        case (isEmptyObj(a)):\n          return { [b.name]: b.value } // init\n        case (a[b.name] !== undefined):\n          return Object.assign(a , {\n            [b.name]: toArr(a[b.name]).concat(toArr(b.value))\n          })\n        default:\n          return Object.assign(a, {[b.name]: b.value})\n       }\n     }, {})\n}\n\n/** when the result is simple text then we parse it to string not buffer */\nfunction processTextArray(\n  params: Array<Record<string, UwsBodyParserMixEntry>>\n) {\n  return params\n    .filter(param => !param.filename && !param.type)\n    .map((param): UwsStringPairObj => (\n      // @TODO how to use the type info to return as number or other data type\n      { [param.name as unknown as string] : toBuffer(param.data).toString() }\n    )\n  )\n  .reduce<Record<string, string>>((a, b) => Object.assign(a, b), {})\n}\n\n/** export this for unit test **/\nexport function processParams(\n  params: Array<Record<string, UwsBodyParserMixEntry>>\n): UwsBodyParserMixEntry {\n  return Object.assign(\n    processFileArray(params),\n    processTextArray(params)\n  )\n}\n", "// main export interface\nimport { bodyParser } from './body-parser'\n// this way the default is bodyparser and if wanted we can named import the others\nexport default bodyParser\n// sub export\nexport {\n  getHeaders,\n  isDynamicRoute\n} from './utils'\nexport {\n  uploadHandler\n} from './handle-upload'\nexport {\n  parse as parseMultipart, // rename it\n  getBoundary\n} from './parse-multipart'\n// 0.3.0 dynamic url\nexport {\n  UrlPattern\n} from './url-pattern'\n// export all constants \nexport * from './constants'\n"],
  "mappings": "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",
  "names": []
}
