{
  post: {
    rules: { year: [ { plugin: 'YearCompare', x: 2000, name: 'year' } ] },
    schema: [
      {
        name: 'year',
        required: true,
        type: 'string',
        rules: [ [Function (anonymous)], [Function (anonymous)] ]
      },
      {
        name: 'month',
        required: true,
        type: 'string',
        rules: [ [Function (anonymous)] ]
      },
      {
        name: 'day',
        required: true,
        type: 'string',
        rules: [ [Function (anonymous)] ]
      }
    ]
  },
  login: {
    rules: {
      password: [
        { plugin: 'checkPassword', name: 'password' },
        { plugin: 'moreThan', num: 8, name: 'password' },
        [Function: password]
      ]
    },
    schema: [
      {
        name: 'username',
        required: true,
        type: 'string',
        rules: [ [Function (anonymous)] ]
      },
      {
        name: 'password',
        required: true,
        type: 'string',
        rules: [
          [Function (anonymous)],
          [Function (anonymous)],
          [Function (anonymous)],
          [Function (anonymous)]
        ]
      }
    ]
  }
}
  âœ” Should able to have a contract with validation info
[
  {
    main: [Function: main],
    params: [ 'x' ],
    name: 'YearCompare',
    external: false
  },
  {
    main: [Function: main],
    name: 'checkPassword',
    external: false,
    validateAsync: [Function (anonymous)]
  }
]
{
  data: [
    {
      name: 'post',
      params: [
        { name: 'year', required: true, type: 'string' },
        { name: 'month', required: true, type: 'string' },
        { name: 'day', required: true, type: 'string' }
      ]
    },
    { name: 'someEndpoint', params: [] },
    {
      name: 'login',
      params: [
        { name: 'username', required: true, type: 'string' },
        { name: 'password', required: true, type: 'string' }
      ]
    }
  ],
  meta: { type: 'rest' }
}
